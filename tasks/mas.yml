---
- name: Ensure MAS cli is installed
  community.general.homebrew:
    name: mas
    state: present

- name: List installed apps
  ansible.builtin.command:
    cmd: mas list
  register: mas_list
  check_mode: false
  changed_when: false
  failed_when: false

- name: Define installed app ids list
  block:
    - name: Create list of currently installed app IDs
      ansible.builtin.set_fact:
        installed_app_ids: "{{ mas_list.stdout_lines | map('regex_replace', '^(\\d+)\\s+.*$', '\\1') | list }}"
      when: mas_list.rc == 0

    - name: Set empty list if no apps installed
      ansible.builtin.set_fact:
        installed_app_ids: []
      when: mas_list.rc != 0

    # TODO: Unfinished
    - name: Find ther difference between installed apps and desired apps
      ansible.builtin.set_fact:
        app_ids__to_install: "{{ mas_install_apps | map(attribute='id') | difference(installed_app_ids) | list }}"
        apps_ids_to_uninstall: "{{ installed_app_ids  | difference(mas_install_apps | map(attribute='id')) | list }}"
      when: mas_list.rc == 0

    - name: Debug
      ansible.builtin.debug:
        msg:
          - "Installed app IDs: {{ installed_app_ids }}"
          - "Apps to install (IDs): {{ app_ids__to_install | default('N/A') }}"
          - "Apps to uninstall (IDs): {{ apps_ids_to_uninstall | default('N/A') }}"
      when: mas_list.rc == 0

- name: Install apps from App Store
  loop: "{{ mas_install_apps | default([]) }}"
  ansible.builtin.command:
    cmd: mas install "{{ item.id }}"
  when:
    - installed_app_ids is defined
    - (item.id | default(item) | string) not in installed_app_ids
  register: mas_install_result
  changed_when: mas_install_result.rc == 0
  failed_when:
    - mas_install_result.rc != 0
    - "'already installed' not in mas_install_result.stderr"

- name: Uninstall apps from App Store
  ansible.builtin.command:
    cmd: mas uninstall "{{ item.id | default(item) }}"
  loop: "{{ mas_uninstall_apps | default([]) }}"
  when:
    - installed_app_ids is defined
    - (item.id | default(item) | string) in installed_app_ids
  register: mas_uninstall_result
  changed_when: mas_uninstall_result.rc == 0
  failed_when:
    - mas_uninstall_result.rc != 0
    - "'not installed' not in mas_uninstall_result.stderr"
